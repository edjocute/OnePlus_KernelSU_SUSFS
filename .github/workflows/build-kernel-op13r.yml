name: Build OnePlus 13r Android 15 6.1 Kernel

on:
  workflow_call:  # This allows this workflow to be called from another workflow
  
jobs:
  build-kernel-a14-6-1-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
          
      - name: Clean up workspace
        run: rm -rf ${{ github.workspace }}/*

      - name: Set CONFIG Environment Variable
        run: |
          # Set CONFIG dynamically based on matrix values
          CONFIG="op13r"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

      - name: Install Repo
        run: |
          # Install dependencies
          sudo apt update
          sudo apt install repo python3 python-is-python3
          ls

      - name: Clone AnyKernel3 and Other Dependencies
        run: |
          echo "Cloning AnyKernel3 and other dependencies..."
    
          # Define the branch names using the matrix values
          ANYKERNEL_BRANCH="android14-6.1"
          SUSFS_BRANCH="gki-android14-6.1"

          # Debug print the branches
          echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"
          echo "Using branch for SUSFS: $SUSFS_BRANCH"

          # Clone repositories using the branch names
          git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"
          git clone https://github.com/TheWildJames/kernel_patches.git
      
      - name: Initialize and Sync Kernel Source
        run: |
          echo "Creating folder for configuration: $CONFIG..."
          mkdir -p "$CONFIG"
          cd "$CONFIG"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          repo init -u https://github.com/edjocute/kernel_manifest.git -b oneplus/sm8650 -m oneplus13r_v.xml --repo-rev=v2.16 --depth=1
          
          # Sync repo and apply patches
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Add KernelSU
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          
          echo "BRANCH=-" >> $GITHUB_ENV
          
          echo "Adding KernelSU-Next..."
          #curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -
          #cd ./KernelSU-Next
          #KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          #echo "KSU_VERSION=$KSU_VERSION"
          #echo "KERNEL_SU_VERSION=$KSU_VERSION" >> $GITHUB_ENV
          #sed -i 's/ccflags-y += -DKSU_VERSION=16/ccflags-y += -DKSU_VERSION=${KSU_VERSION}/' ./kernel/Makefile
          
      - name: Apply SUSFS Patches
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          
          echo "Applying SUSFS patches..."
          
          # Copy SUSFS patches
          #cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp ../../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          #cd ./KernelSU-Next      
          echo "Applying next SUSFS patches..."
          #cp ../../kernel_patches/apk_sign.c_fix.patch ./
          #patch -p1 -F 3 < apk_sign.c_fix.patch
          #cp ../../kernel_patches/core_hook.c_fix.patch ./
          #patch -p1 --fuzz=3 < core_hook.c_fix.patch
          #cp ../../kernel_patches/selinux.c_fix.patch ./
          #patch -p1 -F 3 < selinux.c_fix.patch
          cp ../../../kernel_patches/KernelSU-Next-Implement-SUSFS-v1.5.5-Universal.patch ./
          ##patch -p1 --forward < KernelSU-Next-Implement-SUSFS-v1.5.5-Universal.patch || true
          
          #cd ../common
          ##patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true

      - name: Apply Hide Stuff Patches
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform/common"
          # Apply additional patch
          cp ../../../kernel_patches/69_hide_stuff.patch ./
          ##patch -p1 -F 3 < 69_hide_stuff.patch

      - name: Add SUSFS Configuration Settings
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          
          echo "Adding configuration settings to gki_defconfig..."
          
          # Add SUSFS configuration settings
          # echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add additional tmpfs config setting
          # echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Set LTO to THIN
        run: |
         cd "$CONFIG/kernel_platform"
         
         # sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./common/arch/arm64/configs/gki_defconfig"
         # sed -i 's/CONFIG_LTO_CLANG_FULL=y/CONFIG_LTO_CLANG_THIN=y/' "./common/arch/arm64/configs/gki_defconfig"
         # sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_THIN=y/' "./common/arch/arm64/configs/gki_defconfig"

      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG/kernel_platform"
          ls
          
          echo "Running sed commands..."
          
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./common/build.config.gki
          #sed -i '$s|echo "\$res"|echo "\$res-Wild+"|' ./common/scripts/setlocalversion
          #sed -i '$s|echo "\$res"|echo "\$res-Wild+"|' ./msm-kernel/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -i 's/ -dirty//g' ./common/scripts/setlocalversion || echo "-dirty not found in common"
          sed -i 's/ -dirty//g' ./msm-kernel/scripts/setlocalversion || echo "-dirty not found in msm-kernel"
         
          # Run perl command to modify UTS_VERSION
          perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./common/scripts/mkcompile_h

      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          
          echo "Building the kernel..."
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm -rf ./kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm -rf .git || echo "No .git found!"
          #git config --global user.name "build"
          #git config --global user.email "3653072+edjocute@users.noreply.github.com"
          #git add *
          #git commit -s -a -m "getting rid of -dirty"
          
          ./kernel_platform/oplus/build/oplus_build_kernel.sh pineapple gki

      - name: Create Bootimgs Folder and Copy Images
        run: |
          echo "Changing to configuration directory: $CONFIG..."
          cd "$CONFIG"
          
          echo "Copying Image"
          cp ./out/dist/Image ../AnyKernel3/Image
          
      - name: Create ZIP Files for Different Formats
        run: |
          echo "Creating zip files for all formats..."
          cd ./AnyKernel3
          
          ZIP_NAME="Anykernel3-OP13r-A15-android14-6.1-KernelSU-SUSFS.zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ env.CONFIG }}
          path: |
            *.zip

